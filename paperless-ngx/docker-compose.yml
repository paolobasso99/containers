version: "3.9"

services:
  paperless_ngx_redis:
    image: docker.io/library/redis:7.4.1-alpine@sha256:c1e88455c85225310bbea54816e9c3f4b5295815e6dbf80c34d40afc6df28275
    container_name: paperless_ngx_redis
    restart: unless-stopped
    networks:
      - paperless_ngx
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

  paperless_ngx_db:
    image: docker.io/library/postgres:15.10-alpine@sha256:fd3abc9557df27613bd5c5e6608fc62fb04dc90c8e79c3322348d600e4b75478
    restart: unless-stopped
    container_name: papeless_ngx_db
    # See: https://github.com/docker-library/docs/blob/master/postgres/README.md#arbitrary---user-notes
    user: "${PUID}:${PGID}"
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=paperless_ngx
      - POSTGRES_USER=paperless_ngx
      - POSTGRES_PASSWORD=${PAPERLESS_NGX_DB_PASSWORD}
    networks:
      - paperless_ngx
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  paperless_ngx_db_dumper:
    image: docker.io/paolobasso/database_dumper:postgres-15
    restart: unless-stopped
    depends_on:
      - paperless_ngx_db
    container_name: paperless_ngx_db_dumper
    volumes:
      - ./db_dumps:/dumps
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DUMPER_DATABASE=paperless_ngx
      - DUMPER_HOST=paperless_ngx_db
      - DUMPER_USER=paperless_ngx
      - DUMPER_PASSWORD=${PAPERLESS_NGX_DB_PASSWORD}
      - DUMPER_HEALTHCHECKS_URL=${PAPERLESS_NGX_DB_DUMPER_HEALTHCHECKS_URL}
    networks:
      - paperless_ngx

  paperless_ngx_tika:
    image: ghcr.io/paperless-ngx/tika@sha256:20db3df89eaeb1b271dd840888fe909b88b12f4b86ef641ec07a1d45d4c5168f
    container_name: paperless_ngx_tika
    restart: unless-stopped
    user: ${PUID}:${PGID}
    networks:
      - paperless_ngx
    # No healthcheck because no curl or wget

  paperless_ngx_gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10.2@sha256:d03b8a04c6e6c5e568b38f57352266dee4674849b71818774025f8f48d869a9a
    restart: unless-stopped
    container_name: paperless_ngx_gotenberg
    user: ${PUID}:${PGID}
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:3000/health"]
      start_period: 20s
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - paperless_ngx

  paperless_ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:1.17.4@sha256:2daa90449bc5a57ce6b58792f873f0da6d09039b74caa9f89e28010e40ef770e
    container_name: paperless_ngx
    depends_on:
      - paperless_ngx_redis
      - paperless_ngx_db
      - paperless_ngx_tika
      - paperless_ngx_gotenberg
    environment:
      - USERMAP_UID=${PUID}
      - USERMAP_GID=${PGID}
      - PAPERLESS_TIME_ZONE=${TZ}
      - PAPERLESS_SECRET_KEY=${PAPERLESS_NGX_SECRET_KEY}
      - PAPERLESS_OCR_LANGUAGE=${PAPERLESS_NGX_OCR_LANGUAGE}
      - PAPERLESS_REDIS=redis://paperless_ngx_redis:6379
      - PAPERLESS_DBHOST=paperless_ngx_db
      - PAPERLESS_DBPORT=5432
      - PAPERLESS_DBUSER=paperless_ngx
      - PAPERLESS_DBNAME=paperless_ngx
      - PAPERLESS_DBPASS=${PAPERLESS_NGX_DB_PASSWORD}
      - PAPERLESS_TIKA_ENABLED=1
      - PAPERLESS_TIKA_GOTENBERG_ENDPOINT=http://paperless_ngx_gotenberg:3000
      - PAPERLESS_TIKA_ENDPOINT=http://paperless_ngx_tika:9998
      - PAPERLESS_URL=https://${PAPERLESS_NGX_HOST}
    volumes:
      - ./data:/usr/src/paperless/data
      - ./media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.paperless_ngx.loadbalancer.server.port=8000"
      - "traefik.http.routers.paperless_ngx.service=paperless_ngx"
      - "traefik.http.routers.paperless_ngx.tls=true"
      - "traefik.http.routers.paperless_ngx.entrypoints=websecure"
      - 'traefik.http.routers.paperless_ngx.rule=Host("$PAPERLESS_NGX_HOST")'
      - "traefik.http.routers.paperless_ngx.middlewares=authelia@docker"
    networks:
      - paperless_ngx
      - web_proxy
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      start_period: 20s
      interval: 30s
      timeout: 5s
      retries: 5

  paperless_ngx_webdav:
    image: docker.io/paolobasso/webdav
    container_name: paperless_ngx_webdav
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./consume:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.paperless_ngx_webdav.loadbalancer.server.port=80"
      - "traefik.http.routers.paperless_ngx_webdav.service=paperless_ngx_webdav"
      - "traefik.http.routers.paperless_ngx_webdav.tls=true"
      - "traefik.http.routers.paperless_ngx_webdav.entrypoints=websecure"
      - "traefik.http.routers.paperless_ngx_webdav.middlewares=authelia-basic@docker"
      - 'traefik.http.routers.paperless_ngx_webdav.rule=Host("$PAPERLESS_NGX_WEBDAV_HOST")'
    networks:
      - web_proxy
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:80"]
      start_period: 20s
      interval: 30s
      timeout: 5s
      retries: 5

networks:
  web_proxy:
    external: true
  paperless_ngx:
    driver: bridge
