version: "3.9"

services:
  traefik:
    container_name: traefik
    image: docker.io/library/traefik:v2.11.27@sha256:684dfd3846b9703c56f02130ceb61d0ff80e7e50e8bf80634878c65a7f54efdf
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - CF_API_EMAIL=${TRAEFIK_CF_API_EMAIL}
      - CF_API_KEY=${TRAEFIK_CF_API_KEY}
    ports:
      # - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme/acme.json:/acme.json
    networks:
      - web_proxy
    command:
      - --serversTransport.insecureSkipVerify=true
      # Global settings
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      # Entrypoints
      # - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      # Dashboard
      - --api=true
      - --api.dashboard=true
      - --api.insecure=false
      - --api.debug=false
      # Log
      - --log=true
      - --log.level=${TRAEFIK_LOG_LEVEL} # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      # Certificate
      #      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # LetsEncrypt Staging Server
      - --certificatesResolvers.dns-cloudflare.acme.email=${TRAEFIK_CF_API_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      # Docker provider
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=web_proxy
      - --providers.docker.swarmMode=false
      - --providers.docker.defaultRule=Host("{{ index .Labels "com.docker.compose.service" }}.$TRAEFIK_DOMAIN")
      # Metrics
      - --entryPoints.metrics.address=:5043
      - --metrics=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entryPoint=metrics
      # Skip verification of backend certificates if needed, see https://community.containo.us/t/insecureskipverify-explanation/2195/28
      #      - --serversTransport.insecureSkipVerify=true
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - 'traefik.http.routers.traefik.rule=Host("$TRAEFIK_SUBDOMAIN.$TRAEFIK_DOMAIN")'
      # Certificates
      - "traefik.http.routers.traefik.tls.domains[0].main=$TRAEFIK_DOMAIN"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.$TRAEFIK_DOMAIN"
      # Redirect http to https
      # - 'traefik.http.routers.http-catchall.rule=hostregexp("{host:.+}")'
      # - "traefik.http.routers.http-catchall.entrypoints=web"
      # - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # Metrics
      - "traefik.http.routers.traefik-metrics.service=traefik-metrics"
      - "traefik.http.routers.traefik-metrics.tls=true"
      - "traefik.http.routers.traefik-metrics.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.traefik-metrics.entrypoints=websecure"
      - "traefik.http.services.traefik-metrics.loadbalancer.server.port=5043"
      - 'traefik.http.routers.traefik-metrics.rule=Host("$TRAEFIK_SUBDOMAIN.$TRAEFIK_DOMAIN") && Path("/metrics")'
      # Authelia middlewares
      - "traefik.http.middlewares.authelia.forwardauth.address=$TRAEFIK_AUTHELIA_VERIFY_URL?rd=https://$TRAEFIK_AUTHELIA_HOST"
      - "traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email"
      - "traefik.http.middlewares.authelia-basic.forwardauth.address=$TRAEFIK_AUTHELIA_VERIFY_URL?auth=basic"
      - "traefik.http.middlewares.authelia-basic.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia-basic.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email"
      # Protect dashboard and metrics with Authelia
      - "traefik.http.routers.traefik.middlewares=authelia@docker"
      - "traefik.http.routers.traefik-metrics.middlewares=authelia-basic@docker"

networks:
  web_proxy:
    external: true
