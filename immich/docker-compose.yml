version: "3.9"

services:
  immich_db:
    image: docker.io/library/postgres:16.0-alpine@sha256:fedc131c1ce671d13c28c442aa4bebf2c616d952866f9ec0cee16d06c28b37b4
    restart: unless-stopped
    container_name: immich_db
    # See: https://github.com/docker-library/docs/blob/master/postgres/README.md#arbitrary---user-notes
    user: "${PUID}:${PGID}"
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=immich
      - POSTGRES_USER=immich
      - POSTGRES_PASSWORD=${IMMICH_DB_PASSWORD}
    networks:
      - immich
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  immich_db_dumper:
    image: docker.io/paolobasso/database_dumper:postgres-15
    restart: unless-stopped
    depends_on:
      - immich_db
    container_name: immich_db_dumper
    volumes:
      - ./db_dumps:/dumps
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DUMPER_DATABASE=immich
      - DUMPER_HOST=immich_db
      - DUMPER_USER=immich
      - DUMPER_PASSWORD=${IMMICH_DB_PASSWORD}
      - DUMPER_HEALTHCHECKS_URL=${IMMICH_DB_DUMPER_HEALTHCHECKS_URL}
    networks:
      - immich

  immich_server:
    image: ghcr.io/immich-app/immich-server:v1.81.1@sha256:6941e59187afd16f4703362f410245ca5e19cdab79c97a7d69224163e020c0a2
    container_name: immich_server
    command: ["start.sh", "immich"]
    depends_on:
      - immich_db
      - immich_redis
    environment:
      - IMMICH_MACHINE_LEARNING_ENABLED=false
      - DB_HOSTNAME=immich_db
      - DB_USERNAME=immich
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_DATABASE_NAME=immich
      - DB_PORT=5432
      - REDIS_HOSTNAME=immich_redis
      - REDIS_PORT=6379
      - TYPESENSE_ENABLED=false
    volumes:
      - ${IMMICH_UPLOAD_PATH}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich_server.service=immich_server"
      - "traefik.http.routers.immich_server.tls=true"
      - "traefik.http.routers.immich_server.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.immich_server.entrypoints=websecure"
      - 'traefik.http.routers.immich_server.rule=Host(`${IMMICH_HOST}`) && PathPrefix("/api/")'
      - "traefik.http.middlewares.immich_server.stripprefix.prefixes=/api/"
      - "traefik.http.routers.immich_server.middlewares=immich_server"
      - "traefik.http.services.immich_server.loadbalancer.server.port=3001"
    networks:
      - immich
      - web_proxy

  immich_microservices:
    image: ghcr.io/immich-app/immich-server:v1.81.1@sha256:6941e59187afd16f4703362f410245ca5e19cdab79c97a7d69224163e020c0a2
    container_name: immich_microservices
    command: ["start.sh", "microservices"]
    volumes:
      - ${IMMICH_UPLOAD_PATH}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - IMMICH_MACHINE_LEARNING_ENABLED=false
      - DB_HOSTNAME=immich_db
      - DB_USERNAME=immich
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_DATABASE_NAME=immich
      - DB_PORT=5432
      - REDIS_HOSTNAME=immich_redis
      - REDIS_PORT=6379
      - TYPESENSE_ENABLED=false
    depends_on:
      - immich_db
      - immich_redis
    restart: unless-stopped
    networks:
      - immich

  immich_web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:v1.81.1@sha256:93ec1c8012da4454aa91a29e37d61c67660d2319f610a582998f7cfe2c816cea
    depends_on:
      - immich_server
      - immich_redis
      - immich_db
    environment:
      - IMMICH_SERVER_URL=http://immich_server:3001
      - PUBLIC_IMMICH_SERVER_URL=http://immich_server:3001
      - IMMICH_API_URL_EXTERNAL=/api
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.immich_web.service=immich_web"
      - "traefik.http.routers.immich_web.tls=true"
      - "traefik.http.routers.immich_web.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.immich_web.entrypoints=websecure"
      - "traefik.http.routers.immich_web.rule=Host(`${IMMICH_HOST}`)"
      - "traefik.http.services.immich_web.loadbalancer.server.port=3000"
      - "traefik.http.routers.immich_web.middlewares=authelia@docker"
    networks:
      - immich
      - web_proxy

  immich_redis:
    image: docker.io/library/redis:7.2.1-alpine@sha256:7f5a0dfbf379db69dc78434091dce3220e251022e71dcdf36207928cbf9010de
    container_name: immich_redis
    restart: unless-stopped
    networks:
      - immich
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

networks:
  web_proxy:
    external: true
  immich:
    driver: bridge
