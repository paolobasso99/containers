version: "3.9"

services:
  gotify_db:
    image: docker.io/library/postgres:16.0-alpine@sha256:fedc131c1ce671d13c28c442aa4bebf2c616d952866f9ec0cee16d06c28b37b4
    restart: unless-stopped
    container_name: gotify_db
    # See: https://github.com/docker-library/docs/blob/master/postgres/README.md#arbitrary---user-notes
    user: "${PUID}:${PGID}"
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=gotify
      - POSTGRES_USER=gotify
      - POSTGRES_PASSWORD=${GOTIFY_DB_PASSWORD}
    networks:
      - gotify
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s

  gotify_db_dumper:
    image: docker.io/paolobasso/database_dumper:postgres-15
    restart: unless-stopped
    depends_on:
      - gotify_db
    container_name: gotify_db_dumper
    volumes:
      - ./db_dumps:/dumps
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - DUMPER_DATABASE=gotify
      - DUMPER_HOST=gotify_db
      - DUMPER_USER=gotify
      - DUMPER_PASSWORD=${GOTIFY_DB_PASSWORD}
      - DUMPER_HEALTHCHECKS_URL=${GOTIFY_DB_DUMPER_HEALTHCHECKS_URL}
    networks:
      - gotify

  gotify:
    image: docker.io/gotify/server:2.4.0@sha256:436a75a37795fed03df4d183c007b9d7d84329d4e92067121ff77f08e78cdadf
    depends_on:
      - gotify_db
    restart: unless-stopped
    container_name: gotify
    user: "${PUID}:${PGID}"
    environment:
      - GOTIFY_DATABASE_DIALECT=postgres
      - GOTIFY_DATABASE_CONNECTION=host=gotify_db port=5432 user=gotify dbname=gotify password=${GOTIFY_DB_PASSWORD} sslmode=disable
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gotify.service=gotify"
      - "traefik.http.routers.gotify.tls=true"
      - "traefik.http.routers.gotify.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.gotify.entrypoints=websecure"
      - 'traefik.http.routers.gotify.rule=Host("$GOTIFY_HOST")'
      - "traefik.http.services.gotify.loadbalancer.server.port=80"
    volumes:
      - ./data:/app/data
    networks:
      - gotify
      - web_proxy

networks:
  web_proxy:
    external: true
  gotify:
    driver: bridge
